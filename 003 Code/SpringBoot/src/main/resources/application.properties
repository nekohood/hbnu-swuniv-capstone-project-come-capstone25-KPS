# =============================================================================
# 기숙사 관리 시스템 설정 파일 (개선된 버전)
# =============================================================================

# =============================================================================
# 서버 설정
# =============================================================================
server.port=8080
server.address=0.0.0.0
server.servlet.context-path=/
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# 서버 성능 설정
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.connection-timeout=20000
server.tomcat.max-connections=8192

# =============================================================================
# Spring 설정
# =============================================================================
# 빈 정의 오버라이드 허용 (JPA Auditing 중복 문제 해결)
spring.main.allow-bean-definition-overriding=true

# 애플리케이션 이름
spring.application.name=dormitory-management-system

# =============================================================================
# 데이터베이스 설정
# =============================================================================

# MySQL 설정 (프로덕션)
spring.datasource.url=${jdbc:mysql://localhost:3306/Dormitory_Management}
spring.datasource.username=${DB_USERNAME:mysql}
spring.datasource.password=${DB_PASSWORD:1234}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# 연결 풀 설정 (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# 연결 테스트 설정
spring.datasource.test-while-idle=true
spring.datasource.validation-query=SELECT 1

# =============================================================================
# JPA/Hibernate 설정
# =============================================================================
# 개발환경에서는 update, 프로덕션에서는 validate 사용
spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Seoul
spring.jpa.open-in-view=false

# 트랜잭션 설정 - autocommit을 false로 변경하여 트랜잭션 관리 개선
spring.jpa.properties.hibernate.connection.autocommit=false
spring.jpa.properties.hibernate.current_session_context_class=thread

# =============================================================================
# JPA 설정 강화 (created_at 문제 해결)
# =============================================================================
# JPA 감사 기능 활성화
spring.jpa.hibernate.use-new-id-generator-mappings=true

# MySQL 특정 설정
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# MySQL 날짜/시간 처리
spring.jpa.properties.hibernate.connection.characterEncoding=utf-8
spring.jpa.properties.hibernate.connection.useUnicode=true

# 자동 스키마 생성 설정 (개발 환경에서만)
spring.jpa.generate-ddl=true

# Hibernate 엔티티 스캔 패키지 명시
spring.jpa.properties.hibernate.packagesToScan=com.dormitory.SpringBoot.domain

# 배치 처리 최적화
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true

# =============================================================================
# 파일 업로드 설정
# =============================================================================
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.location=${java.io.tmpdir}

# 커스텀 파일 업로드 설정
file.upload.base-path=${FILE_UPLOAD_PATH:uploads}
file.upload.max-size=5MB
file.upload.allowed-types=jpg,jpeg,png,gif,webp

# =============================================================================
# 보안 설정
# =============================================================================
# JWT 설정 - 환경변수 사용 권장
app.jwt.secret=${JWT_SECRET:ThisIsAFakeSecretKeyForDefaultUse}
app.jwt.expiration=${JWT_EXPIRATION:86400000}

# 암호화 설정 - 환경변수 사용 권장
app.encryption.secret-key=${ENCRYPTION_KEY:ThisIsAFakeEncryptionKey32Chars}

# 보안 관련 설정
app.security.max-login-attempts=5
app.security.lockout-duration-minutes=30
app.security.password-expiry-days=90
app.security.session-timeout-minutes=30
app.security.password-min-length=8
app.security.password-require-special-chars=true

# =============================================================================
# 외부 API 설정
# =============================================================================
# Gemini API 설정 최적화
gemini.api.key=${GEMINI_API_KEY:ThisIsAFakeGeminiAPIKey}
gemini.api.url=https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent
gemini.api.timeout=45000
gemini.api.max-retries=2
gemini.api.max-tokens=2048

# Gemini 응답 처리 설정
gemini.fallback.enabled=true
gemini.fallback.default-score=7
gemini.max-tokens.retry-enabled=true

# =============================================================================
# 애플리케이션 비즈니스 로직 설정
# =============================================================================
# 점호 관련 설정 조정
inspection.pass.score=6
inspection.fail.score=5
inspection.image.max-size=5MB
inspection.auto-cleanup.enabled=true
inspection.auto-cleanup.days=30

# 민원 관련 설정
complaint.auto-assign.enabled=true
complaint.response-time.warning-hours=24
complaint.response-time.critical-hours=72

# =============================================================================
# 로깅 설정
# =============================================================================
# 기본 로그 레벨
logging.level.root=INFO

# 패키지별 로그 레벨
logging.level.com.dormitory.SpringBoot=DEBUG
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:INFO}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO

# 로그 출력 형식
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# 로그 파일 설정
logging.file.name=${LOG_FILE:logs/dormitory-management.log}
logging.file.max-size=10MB
logging.file.max-history=30
logging.file.total-size-cap=1GB

# =============================================================================
# API 문서화 설정 (Swagger)
# =============================================================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.api-docs.enabled=${SWAGGER_ENABLED:true}
springdoc.swagger-ui.enabled=${SWAGGER_UI_ENABLED:true}

# =============================================================================
# 모니터링 설정 (Actuator)
# =============================================================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when_authorized
management.endpoints.web.base-path=/actuator
management.endpoint.health.probes.enabled=true

# 헬스 체크 설정
management.health.diskspace.enabled=true
management.health.db.enabled=true

# 애플리케이션 정보
management.info.env.enabled=true
info.app.name=Dormitory Management System
info.app.description=기숙사 관리 시스템
info.app.version=1.0.0
info.app.encoding=UTF-8
info.app.java.version=${java.version}

# =============================================================================
# 캐싱 설정
# =============================================================================
spring.cache.type=simple
spring.cache.cache-names=users,inspections,complaints
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=10m

# =============================================================================
# 개발 환경 설정
# =============================================================================
# 개발 도구 활성화
spring.devtools.restart.enabled=${DEVTOOLS_ENABLED:true}
spring.devtools.livereload.enabled=${LIVERELOAD_ENABLED:true}

# H2 콘솔 설정 (개발용)
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:false}
spring.h2.console.path=/h2-console

# =============================================================================
# 프로파일별 설정
# =============================================================================
# 활성 프로파일 설정
spring.profiles.active=${SPRING_PROFILES_ACTIVE:dev}

# =============================================================================
# 성능 및 최적화 설정
# =============================================================================
# HTTP/2 지원
server.http2.enabled=true

# 압축 설정
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml

# 정적 리소스 캐싱
spring.web.resources.cache.cachecontrol.max-age=31536000
spring.web.resources.cache.cachecontrol.cache-public=true

# =============================================================================
# 비동기 처리 설정
# =============================================================================
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=20
spring.task.execution.pool.queue-capacity=100
spring.task.execution.thread-name-prefix=async-

# =============================================================================
# 국제화 설정
# =============================================================================
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600

