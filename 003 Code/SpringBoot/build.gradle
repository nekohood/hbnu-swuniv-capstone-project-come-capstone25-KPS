plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.dormitory'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ✅ Spring Boot 기본 스타터들
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// ✅ 데이터베이스 관련
	implementation 'mysql:mysql-connector-java:8.0.33'
	runtimeOnly 'com.h2database:h2'

	// ✅ JWT 토큰 처리 (최신 버전)
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// ✅ JSON 처리
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.core:jackson-annotations'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// ✅ 파일 업로드 처리
	implementation 'commons-fileupload:commons-fileupload:1.5'
	implementation 'commons-io:commons-io:2.11.0'

	// ✅ Google Gemini API를 위한 HTTP 클라이언트
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.squareup.okhttp3:okhttp:4.11.0'

	// ✅ Base64 인코딩을 위한 Apache Commons (올바른 이름)
	implementation 'commons-codec:commons-codec:1.15'

	// ✅ 로깅
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	// ✅ 개발 도구
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// ✅ 설정 프로퍼티 처리
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// ✅ 테스트 관련
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// ✅ API 문서화
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// ✅ 모니터링
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
	useJUnitPlatform()
}

jar {
	enabled = false
	archiveClassifier = ''
}

bootJar {
	enabled = true
	archiveClassifier = ''
	mainClass = 'com.dormitory.SpringBoot.Application'
}

compileJava {
	options.encoding = 'UTF-8'
}

compileTestJava {
	options.encoding = 'UTF-8'
}